@{
    ViewData["Title"] = "Dashboard";
    string message = "";
    if (ViewData["Message"] != null)
    {
        message = ViewData["Message"].ToString();
    }

}
@inject IHttpContextAccessor Accessor;


<style>
   

    .action-navbar {
        background-color: var(--dark);
        padding: 10px;
        border-top-left-radius: 20px;
        border-top-right-radius: 20px;
    }

    .action-navbar-2 {
        border-top: 2px solid white;
        background-color: var(--dark);
        padding: 10px;
    }

    .circle-btn {
        width: 40px; /* Adjust as needed */
        height: 40px;
        border-radius: 50%;
        border: none;
        background: transparent;
        color: white; /* Icon color */
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 20px;
        transition: all 0.3s ease-in-out;
    }

    .lbl {
        display: flex;
        color: white;
        margin-top: 10px;
        height: 100%;
        align-items: center;
        color: white;
    }

    .circle-btn:hover {
        background: var(--accent);
        color: white;
    }

    .btn:hover {
        background-color: #0056b3;
        color: #fff;
        box-shadow: 0 0 10px rgba(255, 255, 255, 0.8);
    }

    .btn:hover::before {
        opacity: 1;
        animation: shineEffect 1.5s infinite;
    }

    @@keyframes shineEffect {
        0% {
            left: -100%;
        }

        50% {
            left: 100%;
        }

        100% {
            left: -100%;
        }
    }

</style>
<div>
    <div class="d-flex action-navbar">
        <div class="date-input" style=" display: flex; gap: 15px; align-items: center;">
            <label for="datefrom" class="lbl">From:</label>
            <input type="date" id="datefrom" class="mod-inputs-nw" placeholder="Date" value="@DateTime.Now.ToString("yyyy-MM-dd")" />
            <label for="dateto" class="lbl">To:</label>
            <input type="date" id="dateto" class="mod-inputs-nw" placeholder="Date" value="@DateTime.Now.ToString("yyyy-MM-dd")" />
            <button class="circle-btn" id="filter" title="Time In">
                <i class="fa-solid fa-magnifying-glass"></i>
            </button>
        </div>
        <div id="time-btn-holder" class="time-btn-holder">
        </div>
    </div>
    <div class="d-flex action-navbar-2">
        <div class="date-input" style=" display: flex; gap: 15px; align-items: center;">
            <button class="btn btn-info" id="leavefile" title="Add New">
                <i class="fa-solid fa-circle-plus"></i> Add New
            </button>
            <button class="btn btn-danger" id="show-timeout-modal" title="Delete">
                <i class="fa-solid fa-circle-minus"></i> Delete
            </button>
            <button class="btn btn-warning" id="btn-refresh" title="Refresh">
                <i class="fa-solid fa-arrows-rotate"></i> Refresh
            </button>
            <button class="btn btn-primary" id="add-timelogs" title="Import" onclick="myFunctionOpen()">
                <i class="fa-solid fa-file-import"></i> Import
            </button>
            <button class="btn btn-success" id="add-timelogs" title="Export" onclick="myFunctionOpen()">
                <i class="fa-solid fa-file-arrow-down"></i> Export
            </button>
        </div>

        <div id="time-btn-holder" class="time-btn-holder">
        </div>
    </div>
    <div>
        <div>

            <table id="leave-table" class="table table-bordered table-hover w-100" style="margin-top:0px !important">
                <thead>
                </thead>
                <tbody>
                </tbody>

            </table>
            <div id="table-footer">
            </div>
        </div>
    </div>
</div>
<script src="~/js/leave.js"></script>
<script>
    var EmployeeID = '@Accessor.HttpContext.Session.GetString("EmployeeID")';

    $(document).ready(function () {
        // var tableId = '#leave-table';
        // if ($.fn.DataTable.isDataTable(tableId)) {
        //     $(tableId).DataTable().clear().destroy();
        // }
        // $("#checkAll").click(function () {
        //     $("input:checkbox").not(this).prop("checked", this.checked);
        //     if ($(this).prop("checked") == true) {
        //         console.log("checkall");
        //     } else {

        //         console.log("uncheckall");
        //     }
        // });
        FetchLeaveRequestList();
        OverTimeDOM();
    });


    $('#leave-table').on('click', '.editlr', function () {
        // console.log($(this).data('id'))
        loadModal('/Leave/LeaveFiling', '#defaultmodal', '<i class="fa-solid fa-business-time"></i> Update Leave ', 'l', false);

        var leaveid = $(this).data('id');
        var leaveedate = $(this).data('edate');
        var leavesdate = $(this).data('sdate');
        var leavedfiled = $(this).data('dfiled');
        var leavetype = $(this).data('leavetype');
        var leavereason = $(this).data('reason');

        localStorage.setItem('leaveid', leaveid);
        localStorage.setItem('leaveedate', leaveedate);
        localStorage.setItem('leavesdate', leavesdate);
        localStorage.setItem('leavedfiled', leavedfiled);
        localStorage.setItem('leavetype', leavetype);
        localStorage.setItem('leavereason', leavereason);


    });
    $("#leavefile").on("click", function () {
        loadModal('/Leave/LeaveFiling', '#defaultmodal', '<i class="fa-solid fa-business-time"></i> New Leave ', 'l', false)
        localStorage.setItem('leaveid', '');
        localStorage.setItem('leaveedate', '');
        localStorage.setItem('leavesdate', '');
        localStorage.setItem('leavedfiled', '');
        localStorage.setItem('leavetype', '');
        localStorage.setItem('leavereason', '');

    });
    $("#btn-refresh").on("click", function () {
        var tableId = '#leave-table';
        if ($.fn.DataTable.isDataTable(tableId)) {
            $(tableId).DataTable().clear().destroy();
        }
        FetchLeaveRequestList();
    });
</script>