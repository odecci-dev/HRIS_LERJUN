@{
    ViewData["Title"] = "Dashboard";
    string message = "";
    if (ViewData["Message"] != null)
    {
        message = ViewData["Message"].ToString();
    }

}
@inject IHttpContextAccessor Accessor;
<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
@* <link rel="stylesheet" href="~/css/dashboard.css" asp-append-version="true" /> *@
<link rel="stylesheet" href="~/css/variables.css" asp-append-version="true" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback">
<!-- Font Awesome -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
<!-- DataTables -->
<link rel="stylesheet" href="~/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
<link rel="stylesheet" href="~/plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
<link rel="stylesheet" href="~/plugins/datatables-buttons/css/buttons.bootstrap4.min.css">
<!-- Theme style -->
<link rel="stylesheet" href="~/dist/css/adminlte.min.css">
<link href="~/css/iziToast.min.css" rel="stylesheet" />
<link rel="stylesheet" href="~/css/mod-input.css" />
<link rel="stylesheet" href="~/css/timelogs.css" />
<link rel="stylesheet" href="~/css/department.css" />
<link href="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdn.datatables.net/2.2.2/css/dataTables.dataTables.css">

<link rel="stylesheet" href="https://cdn.datatables.net/responsive/3.0.3/css/responsive.dataTables.css">


<style>

    .action-navbar {
        background-color: var(--dark);
        padding: 10px;
        border-top-left-radius: 20px;
        border-top-right-radius: 20px;
    }

    .action-navbar-2 {
        border-top: 2px solid white;
        background-color: var(--dark);
        padding: 10px;
    }

    .circle-btn {
        width: 40px; /* Adjust as needed */
        height: 40px;
        border-radius: 50%;
        border: none;
        background: transparent;
        color: white; /* Icon color */
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 20px;
        transition: all 0.3s ease-in-out;
    }

    .lbl {
        display: flex;
        color: white;
        margin-top: 10px;
        height: 100%;
        align-items: center;
        color: white;
    }

    .circle-btn:hover {
        background: var(--accent);
        color: white;
    }

    .btn:hover {
        background-color: #0056b3;
        color: #fff;
        box-shadow: 0 0 10px rgba(255, 255, 255, 0.8);
    }

        .btn:hover::before {
            opacity: 1;
            animation: shineEffect 1.5s infinite;
        }

    @@keyframes shineEffect {
        0% {
            left: -100%;
        }

        50% {
            left: 100%;
        }

        100% {
            left: -100%;
        }
    }

</style>
<div>
    <div class="d-flex action-navbar">
        @* <div class="date-input" style=" display: flex; gap: 15px; align-items: center;">
            <label for="datefrom" class="lbl">From:</label>
            <input type="date" id="datefrom" class="mod-inputs-nw" placeholder="Date" value="@DateTime.Now.ToString("yyyy-MM-dd")" />
            <label for="dateto" class="lbl">To:</label>
            <input type="date" id="dateto" class="mod-inputs-nw" placeholder="Date" value="@DateTime.Now.ToString("yyyy-MM-dd")" />
            <button class="circle-btn" id="filter" title="Time In">
                <i class="fa-solid fa-magnifying-glass"></i>
            </button>
        </div> *@
        <div class="layer">
            <div class="input-holder">
                <span class="text-left text-dark">From:</span>
                <div class="date-input">
                    <input type="date" id="lr-datefrom" class="mod-inputs-nw" placeholder="Date" />
                </div>
            </div>
            <div class="input-holder">
                <span class="text-left text-dark">To:</span>
                <div class="date-input">
                    <input type="date" id="lr-dateto" class="mod-inputs-nw" placeholder="Date" />
                </div>
            </div>
            <div class="input-holder">
                <div class="date-input">
                    <select id="lr-monthSelect" class="form-control"></select>
                </div>
            </div>

            <div class="input-holder">
                <select id="lrCuttOff">
                    <option value="0" selected> First Cutt-off</option>
                    <option value="1"> Second Cutt-off</option>
                </select>
            </div>
        </div>
        @* <div id="time-btn-holder" class="time-btn-holder">
        </div> *@
    </div>
    <div class="d-flex action-navbar-2">
        <div class="date-input" style=" display: flex; gap: 15px; align-items: center;">
            <button class="btn btn-info" id="leavefile" title="Add New">
                <i class="fa-solid fa-circle-plus"></i> Add New
            </button>
            <button class="btn btn-danger" id="show-timeout-modal" title="Delete">
                <i class="fa-solid fa-circle-minus"></i> Delete
            </button>
            <button class="btn btn-warning" id="btn-refresh" title="Refresh">
                <i class="fa-solid fa-arrows-rotate"></i> Refresh
            </button>
            <button class="btn btn-primary" id="add-timelogs" title="Import" onclick="myFunctionOpen()">
                <i class="fa-solid fa-file-import"></i> Import
            </button>
            @using (Html.BeginForm("LRIndex", "Filing", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <label for="file" class="btn btn-primary" style="font-weight: 400">
                    <input id="lr-upload-excel" type="file" size="1" name="file" accept="excel/*" class="form-control-sm mb-1">
                    <button type="submit" class="btn btn-success btn-block mb-1" id="lr-btnimport" data-toggle="tooltip" title="Import Excel">
                        <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#fff"><path d="M440-320v-326L336-542l-56-58 200-200 200 200-56 58-104-104v326h-80ZM240-160q-33 0-56.5-23.5T160-240v-120h80v120h480v-120h80v120q0 33-23.5 56.5T720-160H240Z" /></svg>
                        Upload
                    </button>

                </label>
            } 
            <button class="btn btn-secondary" id="add-timelogs" title="Download" onclick="downloadLeaveTemplate()">
                <i class="fa-solid fa-file-arrow-down"></i> Download Template
            </button>
        </div>

        <div id="time-btn-holder" class="time-btn-holder">
        </div>
    </div>
    <div>
        <div>

            <table id="leave-table" class="table table-bordered table-hover w-100" style="margin-top:0px !important">
                <thead>
                </thead>
                <tbody>
                </tbody>

            </table>
            <div id="table-footer">
            </div>
        </div>
    </div>
</div>
<script src="~/js/leave.js"></script>
<script>
    var EmployeeID = '@Accessor.HttpContext.Session.GetString("EmployeeID")';

    $(document).ready(function () {
        // var tableId = '#leave-table';
        // if ($.fn.DataTable.isDataTable(tableId)) {
        //     $(tableId).DataTable().clear().destroy();
        // }
        // $("#checkAll").click(function () {
        //     $("input:checkbox").not(this).prop("checked", this.checked);
        //     if ($(this).prop("checked") == true) {
        //         console.log("checkall");
        //     } else {

        //         console.log("uncheckall");
        //     }
        // });
        FetchLeaveRequestList();
        OverTimeDOM();
    });


    $('#leave-table').on('click', '.editlr', function () {
        // console.log($(this).data('id'))
        loadModal('/Leave/LeaveFiling', '#defaultmodal', '<i class="fa-solid fa-business-time"></i> Update Leave ', 'l', false);

        var leaveid = $(this).data('id');
        var leaveedate = $(this).data('edate');
        var leavesdate = $(this).data('sdate');
        var leavedfiled = $(this).data('dfiled');
        var leavetype = $(this).data('leavetype');
        var leavereason = $(this).data('reason');

        localStorage.setItem('leaveid', leaveid);
        localStorage.setItem('leaveedate', leaveedate);
        localStorage.setItem('leavesdate', leavesdate);
        localStorage.setItem('leavedfiled', leavedfiled);
        localStorage.setItem('leavetype', leavetype);
        localStorage.setItem('leavereason', leavereason);


    });
    $("#leavefile").on("click", function () {
        loadModal('/Leave/LeaveFiling', '#defaultmodal', '<i class="fa-solid fa-business-time"></i> New Leave ', 'l', false)
        localStorage.setItem('leaveid', '');
        localStorage.setItem('leaveedate', '');
        localStorage.setItem('leavesdate', '');
        localStorage.setItem('leavedfiled', '');
        localStorage.setItem('leavetype', '');
        localStorage.setItem('leavereason', '');

    });
    $("#btn-refresh").on("click", function () {
        var tableId = '#leave-table';
        if ($.fn.DataTable.isDataTable(tableId)) {
            $(tableId).DataTable().clear().destroy();
        }
        FetchLeaveRequestList();
    });

    document.addEventListener("DOMContentLoaded", function () {
       
        const lrmonthSelect = document.getElementById("lr-monthSelect");
        const lrcurrentYear = new Date().getFullYear();
        for (let lrmonth = 0; lrmonth < 12; lrmonth++) {
           const lrmonthName = new Date(lrcurrentYear, lrmonth).toLocaleString('default', { month: 'long' });
           const lroption = document.createElement("option");
           lroption.value = `${lrcurrentYear}-${String(lrmonth + 1).padStart(2, '0')}`;
           lroption.text = `${lrmonthName} ${lrcurrentYear}`;
           lrmonthSelect.appendChild(lroption);
        }
        // Set default to current month
        lrmonthSelect.value = `${lrcurrentYear}-${String(new Date().getMonth() + 1).padStart(2, '0')}`;
        setCutOffDatesLR();
    });
    function setCutOffDatesLR() {
        const lrselectedMonth = document.getElementById("lr-monthSelect").value;
        const lrCuttOff = document.getElementById("lrCuttOff").value;;
        const [year, month] = lrselectedMonth.split('-').map(Number);

        let fromDate, toDate;
        console.log(month);
        if (lrCuttOff == 0) {
           fromDate = new Date(year, month - 2, 26);
           toDate = new Date(year, month - 1, 10);
        } else if (lrCuttOff == 1) {
           fromDate = new Date(year, month - 1, 11);
           toDate = new Date(year, month - 1, 25);
        }
        // Adjust to weekday if falls on weekend
        fromDate = stladjustToWeekday(fromDate);
        toDate = stladjustToWeekday(toDate);

        // Format as YYYY-MM-DD
        const formatFromDate = (fromDate) => {
           let year = fromDate.getFullYear();
           let month = fromDate.getMonth() + 1; // Month is zero-indexed, so add 1
           let day = fromDate.getDate();
           // Ensure month and day are always two digits
           if (month < 10) month = '0' + month;
           if (day < 10) day = '0' + day;
           return `${year}-${month}-${day}`;
        };
        const formatToDate = (toDate) => {
           let year = toDate.getFullYear();
           let month = toDate.getMonth() + 1; // Month is zero-indexed, so add 1
           let day = toDate.getDate();
           // Ensure month and day are always two digits
           if (month < 10) month = '0' + month;
           if (day < 10) day = '0' + day;
           return `${year}-${month}-${day}`;
        };
        document.getElementById('lr-datefrom').value = formatFromDate(fromDate);
        document.getElementById('lr-dateto').value = formatToDate(toDate);
    }

    $('#lrCuttOff').on('change', function () {
        setCutOffDatesLR();
        FetchLeaveRequestList();
    });
    $('#lr-monthSelect').on('change', function () {
        setCutOffDatesLR();
        FetchLeaveRequestList();
    });
    $('#lr-datefrom').on('change', function () {
        FetchLeaveRequestList();
    });
    $('#lr-dateto').on('change', function () {
        FetchLeaveRequestList();
    });
</script>