@{
    ViewData["Title"] = "Dashboard";
    string message = "";
    if (ViewData["Message"] != null)
    {
        message = ViewData["Message"].ToString();
    }

}
@inject IHttpContextAccessor Accessor;
<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
@* <link rel="stylesheet" href="~/css/dashboard.css" asp-append-version="true" /> *@
<link rel="stylesheet" href="~/css/variables.css" asp-append-version="true" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback">
<!-- Font Awesome -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
<!-- DataTables -->
<link rel="stylesheet" href="~/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
<link rel="stylesheet" href="~/plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
<link rel="stylesheet" href="~/plugins/datatables-buttons/css/buttons.bootstrap4.min.css">
<!-- Theme style -->
<link rel="stylesheet" href="~/dist/css/adminlte.min.css">
<link href="~/css/iziToast.min.css" rel="stylesheet" />
<link rel="stylesheet" href="~/css/mod-input.css" />
<link rel="stylesheet" href="~/css/timelogs.css" />
<link rel="stylesheet" href="~/css/department.css" />
<link href="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdn.datatables.net/2.2.2/css/dataTables.dataTables.css">

<link rel="stylesheet" href="https://cdn.datatables.net/responsive/3.0.3/css/responsive.dataTables.css">


<style>

    .action-navbar {
        background-color: var(--dark);
        padding: 10px;
        border-top-left-radius: 20px;
        border-top-right-radius: 20px;
    }

    .action-navbar-2 {
        border-top: 2px solid white;
        background-color: var(--dark);
        padding: 10px;
    }

    .circle-btn {
        width: 40px; /* Adjust as needed */
        height: 40px;
        border-radius: 50%;
        border: none;
        background: transparent;
        color: white; /* Icon color */
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 20px;
        transition: all 0.3s ease-in-out;
    }

    .lbl {
        display: flex;
        color: white;
        margin-top: 10px;
        height: 100%;
        align-items: center;
        color: white;
    }

    .circle-btn:hover {
        background: var(--accent);
        color: white;
    }

    .btn:hover {
        background-color: #0056b3;
        color: #fff;
        box-shadow: 0 0 10px rgba(255, 255, 255, 0.8);
    }

        .btn:hover::before {
            opacity: 1;
            animation: shineEffect 1.5s infinite;
        }

    @@keyframes shineEffect {
        0% {
            left: -100%;
        }

        50% {
            left: 100%;
        }

        100% {
            left: -100%;
        }
    }

</style>
<div>
    <div class="mod-form action-navbar pos" id="action-navbar-lrfiling" style="margin-bottom: 2px;">
        <div class="action-btns">
            <div class="input-container">
                <a>File new Leave </a>
                <button class="btn btn-info" id="leavefile" title="Add New Leave" onclick="">
                    @* <i class="fas fa-user-plus"></i> Create Position *@ 
                        <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 28 28"><path fill="currentColor" d="M9.5 4a4.5 4.5 0 1 0 0 9a4.5 4.5 0 0 0 0-9m-3 4.5a3 3 0 1 1 6 0a3 3 0 0 1-6 0M20 6a3.5 3.5 0 1 0 0 7a3.5 3.5 0 0 0 0-7m-2 3.5a2 2 0 1 1 4 0a2 2 0 0 1-4 0M4.25 15A2.25 2.25 0 0 0 2 17.25v.531a2 2 0 0 0 .017.242c.017.153.049.363.11.612a5.1 5.1 0 0 0 .867 1.815C4.008 21.803 5.942 23 9.5 23c1.531 0 2.762-.222 3.747-.582a7.5 7.5 0 0 1-.236-1.518c-.836.355-1.97.6-3.511.6c-3.192 0-4.633-1.053-5.306-1.95a3.6 3.6 0 0 1-.61-1.279a3 3 0 0 1-.083-.508l-.001-.018v-.495a.75.75 0 0 1 .75-.75h9.905a7.5 7.5 0 0 1 1.168-1.426A2.3 2.3 0 0 0 14.75 15zM27 20.5a6.5 6.5 0 1 1-13 0a6.5 6.5 0 0 1 13 0m-6-4a.5.5 0 0 0-1 0V20h-3.5a.5.5 0 0 0 0 1H20v3.5a.5.5 0 0 0 1 0V21h3.5a.5.5 0 0 0 0-1H21z" /></svg>
                </button>
            </div>
            <div class="input-container ">
                <a>Import </a>
                <button class="btn btn-info white-bg" id="import-leaverequest" title="Import" onclick="">
                    <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" viewBox="0 0 24 24"><g fill="none" stroke="#205274" stroke-linecap="round" stroke-width="1.5"><path stroke-linejoin="round" d="M12 4v10m0 0l3-3m-3 3l-3-3" /><path d="M12 20a8 8 0 0 1-8-8m16 0a7.99 7.99 0 0 1-3 6.245" /></g></svg>
                </button>
            </div>
            <div class="input-container">
                <a>Refresh </a>
                <button class="btn btn-info white-bg" id="btn-refresh" title="Refresh" onclick="">
                    <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" viewBox="0 0 512 512"><path fill="none" stroke="#205274" stroke-linecap="square" stroke-miterlimit="10" stroke-width="32" d="M320 146s24.36-12-64-12a160 160 0 1 0 160 160" /><path fill="none" stroke="#205274" stroke-linecap="square" stroke-miterlimit="10" stroke-width="32" d="m256 58l80 80l-80 80" /></svg>
                </button>
            </div>
            <div class="input-container delete-pos">
                <a>Delete </a>
                <button class="btn btn-info" id="delete-pos" title="Delete" onclick="DeleteLR()">
                    @* <i class="fas fa-user-plus"></i> Create Position *@ 
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24"><path fill="currentColor" d="M19 4h-3.5l-1-1h-5l-1 1H5v2h14M6 19a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V7H6z" /></svg>
                </button>
            </div>
        </div>
    </div>
    <div class="select-date-container" id="lr-select-date-container">
        <div class="date-range-card">
            <div class="card-header">
                <h4 class="card-title">Select Custom Date Range</h4>
            </div>
            <div class="card-body">
                <div class="input-container-whole select">
                    <select id="lr-quick-select-date" class="mod-input" style="width:100%" required>
                        <option value="" disabled selected></option>
                        <option value="1">Today</option>
                        <option value="7">Last 7 Days</option>
                        <option value="30">Last 1 Month</option>
                        <option value="12">Last 12 Months</option>
                    </select>
                    <label class="label-color label" for="selectday">Quick Select </label>
                    <div class="underline"></div>
                </div>
                <div class="input-container-whole date">
                    <label class="label-color label" for="datehired">From</label>
                    <input type="date" id="lr-datefrom" value="@DateTime.Now.ToString("yyyy-MM-dd")" class="mod-input" />
                    <div class="underline"></div>
                </div>
                <div class="input-container-whole date">
                    <label class="label-color label" for="datehired">To</label>
                    <input type="date" id="lr-dateto" value="@DateTime.Now.ToString("yyyy-MM-dd")" class="mod-input" />
                    <div class="underline"></div>
                </div>
            </div>
            <div class="card-footer">

                <button class="btn btn-danger" id="close-lr-select-date">Cancel</button>
                <button class="btn btn-info" id="lr-apply-date">Apply</button>
            </div>
        </div>
    </div>
    <div class="filing-container" id="lr-filing-container">
        <div class="filing-card">
            <div class="card-header">
                <h4>
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-width="1.5"><path stroke-linejoin="round" d="M12 4v10m0 0l3-3m-3 3l-3-3" /><path d="M12 20a8 8 0 0 1-8-8m16 0a7.99 7.99 0 0 1-3 6.245" /></g></svg>
                    Import
                </h4>
            </div>
            @using (Html.BeginForm("LRIndex", "Filing", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <label for="file" class="" style="font-weight: 400">
                    @* <input id="lr-upload-excel" type="file" size="1" name="file" accept="excel/*" class="form-control-sm mb-1"> *@
                    @* <button type="submit" class="btn btn-success btn-block mb-1" id="lr-btnimport" data-toggle="tooltip" title="Import Excel">
                                <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#fff"><path d="M440-320v-326L336-542l-56-58 200-200 200 200-56 58-104-104v326h-80ZM240-160q-33 0-56.5-23.5T160-240v-120h80v120h480v-120h80v120q0 33-23.5 56.5T720-160H240Z" /></svg>
                                Upload
                            </button> *@
                    <div class="drop-zone" id="lr-drop-zone">
                        <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32"><path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 22c-9 1-8-10 0-9C6 2 23 2 22 10c10-3 10 13 1 12m-12-4l5-4l5 4m-5-4v15" /></svg>
                        <p id="lr-drag-file-label">Click or drag file to this area to upload</p>
                        <input id="lr-upload-excel" type="file" size="1" name="file" accept="excel/*" class="form-control-sm mb-1">
                    </div>

                </label>

                <div class="dl-template">
                    <p>If you do not have a file you can use the template below:</p>
                    <span class="btn btn-secondary template" id="add-timelogs" title="Download" onclick="downloadLeaveTemplate()">
                        @* <i class="fa-solid fa-file-arrow-down"></i> *@ 
                                            <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 12 12"><path fill="none" stroke="#31aa2c" stroke-linecap="round" d="M3.5 5.5h1m-1 2h1m-1 2h1m2-4h2m-2 2h2m-2 2h2m2-6.29V11c0 .28-.22.5-.5.5H2c-.28 0-.5-.22-.5-.5V1c0-.28.22-.5.5-.5h5.79c.13 0 .26.05.35.15l2.21 2.21c.1.09.15.21.15.35zM7.5.5V3c0 .28.22.5.5.5h2.5" stroke-width="1" /></svg>
                        Download Template
                    </span>
                </div>
                <div class="card-footer">
                    <span class="btn btn-success cancel" id="lr-close-filing-container"> Cancel</span>
                    <button type="submit" class="btn btn-success upload" id="btnimport" data-toggle="tooltip" title="Import Excel">
                        @* <i class="fas fa-upload"></i>  *@
                        @* <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#fff"><path d="M440-320v-326L336-542l-56-58 200-200 200 200-56 58-104-104v326h-80ZM240-160q-33 0-56.5-23.5T160-240v-120h80v120h480v-120h80v120q0 33-23.5 56.5T720-160H240Z" /></svg> *@
                        Upload
                    </button>
                </div>
            }

        </div>
    </div>
    <div class="d-flex action-navbarv2">
        @* <div class="date-input" style=" display: flex; gap: 15px; align-items: center;">
            <label for="datefrom" class="lbl">From:</label>
            <input type="date" id="datefrom" class="mod-inputs-nw" placeholder="Date" value="@DateTime.Now.ToString("yyyy-MM-dd")" />
            <label for="dateto" class="lbl">To:</label>
            <input type="date" id="dateto" class="mod-inputs-nw" placeholder="Date" value="@DateTime.Now.ToString("yyyy-MM-dd")" />
            <button class="circle-btn" id="filter" title="Time In">
                <i class="fa-solid fa-magnifying-glass"></i>
            </button>
        </div> *@
        <div class="layer">
            @* <div class="input-holder"> *@
            @*     <span class="text-left text-dark">From:</span> *@
            @*     <div class="date-input"> *@
            @*         <input type="date" id="lr-datefrom" class="mod-inputs-nw" placeholder="Date" /> *@
            @*     </div> *@
            @* </div> *@
            @* <div class="input-holder"> *@
            @*     <span class="text-left text-dark">To:</span> *@
            @*     <div class="date-input"> *@
            @*         <input type="date" id="lr-dateto" class="mod-inputs-nw" placeholder="Date" /> *@
            @*     </div> *@
            @* </div> *@
            <div class="input-holder">
                <div class="date-input">
                    <button id="lr-select-date" class="form-control">
                        <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" viewBox="0 0 24 24"><path fill="var(--light)" d="M12 12h5v5h-5zm7-9h-1V1h-2v2H8V1H6v2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2m0 2v2H5V5zM5 19V9h14v10z" /></svg>
                        Select Date Range
                    </button>
                </div>
            </div>
            @* <div class="input-holder"> *@
            @*     <div class="date-input"> *@
            @*         <select id="lr-monthSelect" class="form-control"></select> *@
            @*     </div> *@
            @* </div> *@
            <div class="input-holder">
                <div class="date-input select">
                    <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" viewBox="0 0 24 24"><path fill="var(--light)" d="M12 12h5v5h-5zm7-9h-1V1h-2v2H8V1H6v2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2m0 2v2H5V5zM5 19V9h14v10z" /></svg>
                    <select id="lr-monthSelect" class="form-control">
                        <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" viewBox="0 0 24 24"><path fill="var(--light)" d="M12 12h5v5h-5zm7-9h-1V1h-2v2H8V1H6v2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2m0 2v2H5V5zM5 19V9h14v10z" /></svg>
                    </select>
                </div>
            </div>
            @* <div class="input-holder"> *@
            @*     <select id="lrCuttOff"> *@
            @*         <option value="0" selected> First Cutt-off</option> *@
            @*         <option value="1"> Second Cutt-off</option> *@
            @*     </select> *@
            @* </div> *@
            <div class="input-holder">
                <div class="date-input select">
                    <svg xmlns="http://www.w3.org/2000/svg" width="28" height="25" viewBox="0 0 28 25" fill="none">
                        <path d="M19.875 16.025L22.925 17.7875L21.9875 19.4125L18 17.1125V12.5H19.875V16.025ZM28 16.25C28 21.0875 24.0875 25 19.25 25C14.4125 25 10.5 21.0875 10.5 16.25C10.5 15.825 10.5375 15.4125 10.6 15H0.5V0H23V8.35C25.95 9.7625 28 12.7625 28 16.25ZM11.35 12.5C11.575 12.05 11.8125 11.625 12.1 11.2125C11.9875 11.25 11.875 11.25 11.75 11.25C9.675 11.25 8 9.575 8 7.5C8 5.425 9.675 3.75 11.75 3.75C13.825 3.75 15.5 5.425 15.5 7.5C15.5 7.8125 15.45 8.125 15.375 8.4125C16.55 7.8375 17.8625 7.5 19.25 7.5C19.675 7.5 20.0875 7.5375 20.5 7.6V5C19.837 5 19.2011 4.73661 18.7322 4.26777C18.2634 3.79893 18 3.16304 18 2.5H5.5C5.5 3.8875 4.3875 5 3 5V10C3.66304 10 4.29893 10.2634 4.76777 10.7322C5.23661 11.2011 5.5 11.837 5.5 12.5H11.35ZM25.5 16.25C25.5 12.8 22.7 10 19.25 10C15.8 10 13 12.8 13 16.25C13 19.7 15.8 22.5 19.25 22.5C22.7 22.5 25.5 19.7 25.5 16.25Z" fill="white" />
                    </svg>
                    <select id="lrCuttOff">
                        <option value="0" selected> First Cutt-off</option>
                        <option value="1"> Second Cutt-off</option>
                    </select>
                </div>
            </div>
        </div>
        @* <div id="time-btn-holder" class="time-btn-holder">
        </div> *@
    </div>
    @* <div class="d-flex action-navbar-2"> *@
    @*     <div class="date-input" style=" display: flex; gap: 15px; align-items: center;"> *@
    @*         <button class="btn btn-info" id="leavefile" title="Add New"> *@
    @*             <i class="fa-solid fa-circle-plus"></i> Add New *@
    @*         </button> *@
    @*         <button class="btn btn-danger" id="show-timeout-modal" title="Delete" onclick="DeleteLR()"> *@
    @*             <i class="fa-solid fa-circle-minus"></i> Delete *@
    @*         </button> *@
    @*         <button class="btn btn-warning" id="btn-refresh" title="Refresh"> *@
    @*             <i class="fa-solid fa-arrows-rotate"></i> Refresh *@
    @*         </button> *@
    @*         <button class="btn btn-primary" id="import-leaverequest" title="Import"> *@
    @*             <i class="fa-solid fa-file-import"></i> Import *@
    @*         </button> *@
           
    @*         @* <button class="btn btn-secondary" id="add-timelogs" title="Download" onclick="downloadLeaveTemplate()"> *@
    @*             <i class="fa-solid fa-file-arrow-down"></i> Download Template *@
    @*         </button> *@ 
    @*     </div> *@

    @*     <div id="time-btn-holder" class="time-btn-holder"> *@
    @*     </div> *@
    @* </div> *@
    <div>
        <div>

            <table id="leave-table" class="table table-bordered table-hover w-100" style="margin-top:0px !important">
                <thead>
                </thead>
                <tbody>
                </tbody>

            </table>
            <div id="table-footer">
            </div>
        </div>
    </div>
</div>
<div class="pencil-action" id="lrfiling-pencil-action" onclick="lrfilingActionFunction();">
    <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 24 24"><path fill="currentColor" d="M6.414 15.89L16.556 5.748l-1.414-1.414L5 14.476v1.414zm.829 2H3v-4.243L14.435 2.212a1 1 0 0 1 1.414 0l2.829 2.829a1 1 0 0 1 0 1.414zM3 19.89h18v2H3z" /></svg>
</div>
<script src="~/js/leave.js"></script>
<script>
    var EmployeeID = '@Accessor.HttpContext.Session.GetString("EmployeeID")';
    var lrfilename = "";
    const selectedLRRequest = [];
    var actionlrfiling = document.getElementById('action-navbar-lrfiling');
    var pencillrfiling = document.getElementById('lrfiling-pencil-action');
    $(document).ready(function () {
        // var tableId = '#leave-table';
        // if ($.fn.DataTable.isDataTable(tableId)) {
        //     $(tableId).DataTable().clear().destroy();
        // }
        // $("#checkAll").click(function () {
        //     $("input:checkbox").not(this).prop("checked", this.checked);
        //     if ($(this).prop("checked") == true) {
        //         console.log("checkall");
        //     } else {

        //         console.log("uncheckall");
        //     }
        // });
        leaveRequestFileDrag();
        FetchLeaveRequestList();
        OverTimeDOM();
    });
    function leaveRequestFileDrag(){
        const dropZone = document.getElementById("lr-drop-zone");
        const fileInput = document.getElementById("lr-upload-excel");

        // Open file picker on click
        dropZone.addEventListener("click", () => fileInput.click());

        // Highlight drop area on drag over
        dropZone.addEventListener("dragover", (e) => {
          e.preventDefault();
          dropZone.classList.add("dragover");
        });

        dropZone.addEventListener("dragleave", () => {
          dropZone.classList.remove("dragover");
        });

        dropZone.addEventListener("drop", (e) => {
          e.preventDefault();
          dropZone.classList.remove("dragover");

          const files = e.dataTransfer.files;
          handleFiles(files);
          if (files.length > 0) {
                console.log('Dropped file:', files[0]);

                // Optional: simulate setting the input's file list
                const dataTransfer = new DataTransfer(); // or ClipboardEvent().clipboardData
                for (let i = 0; i < files.length; i++) {
                    dataTransfer.items.add(files[i]);
                }
                fileInput.files = dataTransfer.files;

                // Now fileInput.files has the dropped file(s)
                // You can trigger a function to handle upload or preview
            }
        });

        // Handle files from input
        fileInput.addEventListener("change", () => {
          handleFiles(fileInput.files);
        });
        // fileInput.addEventListener("change", () => {
        //     if (fileInput.files.length > 0) {
        //     const fileName = fileInput.files[0].name;
        //     console.log("Selected file name:", fileName);

        //     // Optional: display the name in the UI
        //     document.getElementById("lr-drag-file-label").textContent = fileName;
        //     }
        // });
    }
    function handleFiles(files) {
        // You can upload the files here or just log them
        console.log("Files uploaded:", files[0].name);
        lrfilename = files[0].name;
        // Example: Upload to server or display preview
        document.getElementById("lr-drag-file-label").textContent = lrfilename;
        const text = document.getElementById("lr-drag-file-label");
        const colors = ["green"];
        let colorIndex = 0;
        let visible = true;
        text.style.fontWeight = "800";
        setInterval(() => {
          // Toggle visibility
          text.style.visibility = visible ? "hidden" : "visible";
          visible = !visible;

          // Change color on each blink
          if (visible) {
            text.style.color = colors[colorIndex];
            colorIndex = (colorIndex + 1) % colors.length;
          }
        }, 500); // Blink interval: 500ms

    }
    $("#import-leaverequest").click(function () {

        actionlrfiling.style.display = "none";
        pencillrfiling.style.display = "block";
        document.getElementById('lr-filing-container').style.display = "block";
    });
    $("#lr-close-filing-container").click(function () {
        document.getElementById('lr-filing-container').style.display = "none";
    });
    $('#leave-table').on('click', '.editlr', function () {
        // console.log($(this).data('id'))
        loadModal('/Leave/LeaveFiling', '#defaultmodal', '<i class="fa-solid fa-business-time"></i> Update Leave ', 'l', false);

        var leaveid = $(this).data('id');
        var leaveedate = $(this).data('edate');
        var leavesdate = $(this).data('sdate');
        var leavedfiled = $(this).data('dfiled');
        var leavetype = $(this).data('leavetype');
        var leavereason = $(this).data('reason');

        localStorage.setItem('leaveid', leaveid);
        localStorage.setItem('leaveedate', leaveedate);
        localStorage.setItem('leavesdate', leavesdate);
        localStorage.setItem('leavedfiled', leavedfiled);
        localStorage.setItem('leavetype', leavetype);
        localStorage.setItem('leavereason', leavereason);


    });
    $("#leavefile").on("click", function () {
        actionlrfiling.style.display = "none";
        pencillrfiling.style.display = "block";
        loadModal('/Leave/LeaveFiling', '#defaultmodal', '<i class="fa-solid fa-business-time"></i> New Leave ', 'l', false)
        localStorage.setItem('leaveid', '');
        localStorage.setItem('leaveedate', '');
        localStorage.setItem('leavesdate', '');
        localStorage.setItem('leavedfiled', '');
        localStorage.setItem('leavetype', '');
        localStorage.setItem('leavereason', '');

    });
    $("#btn-refresh").on("click", function () {
        var tableId = '#leave-table';
        if ($.fn.DataTable.isDataTable(tableId)) {
            $(tableId).DataTable().clear().destroy();
        }
        FetchLeaveRequestList();
    });

    document.addEventListener("DOMContentLoaded", function () {

        const lrmonthSelect = document.getElementById("lr-monthSelect");
        const lrcurrentYear = new Date().getFullYear();
        for (let lrmonth = 0; lrmonth < 12; lrmonth++) {
           const lrmonthName = new Date(lrcurrentYear, lrmonth).toLocaleString('default', { month: 'long' });
           const lroption = document.createElement("option");
           lroption.value = `${lrcurrentYear}-${String(lrmonth + 1).padStart(2, '0')}`;
           lroption.text = `${lrmonthName} ${lrcurrentYear}`;
           lrmonthSelect.appendChild(lroption);
        }
        // Set default to current month
        lrmonthSelect.value = `${lrcurrentYear}-${String(new Date().getMonth() + 1).padStart(2, '0')}`;
        setCutOffDatesLR();
    });
    function setCutOffDatesLR() {
        const lrselectedMonth = document.getElementById("lr-monthSelect").value;
        const lrCuttOff = document.getElementById("lrCuttOff").value;;
        const [year, month] = lrselectedMonth.split('-').map(Number);

        let fromDate, toDate;
        // console.log(month);
        if (lrCuttOff == 0) {
           fromDate = new Date(year, month - 2, 26);
           toDate = new Date(year, month - 1, 10);
        } else if (lrCuttOff == 1) {
           fromDate = new Date(year, month - 1, 11);
           toDate = new Date(year, month - 1, 25);
        }
        // Adjust to weekday if falls on weekend
        fromDate = stladjustToWeekday(fromDate);
        toDate = stladjustToWeekday(toDate);

        // Format as YYYY-MM-DD
        const formatFromDate = (fromDate) => {
           let year = fromDate.getFullYear();
           let month = fromDate.getMonth() + 1; // Month is zero-indexed, so add 1
           let day = fromDate.getDate();
           // Ensure month and day are always two digits
           if (month < 10) month = '0' + month;
           if (day < 10) day = '0' + day;
           return `${year}-${month}-${day}`;
        };
        const formatToDate = (toDate) => {
           let year = toDate.getFullYear();
           let month = toDate.getMonth() + 1; // Month is zero-indexed, so add 1
           let day = toDate.getDate();
           // Ensure month and day are always two digits
           if (month < 10) month = '0' + month;
           if (day < 10) day = '0' + day;
           return `${year}-${month}-${day}`;
        };
        document.getElementById('lr-datefrom').value = formatFromDate(fromDate);
        document.getElementById('lr-dateto').value = formatToDate(toDate);
    }

    $('#lrCuttOff').on('change', function () {
        setCutOffDatesLR();
        FetchLeaveRequestList();
    });
    $('#lr-monthSelect').on('change', function () {
        setCutOffDatesLR();
        FetchLeaveRequestList();
    });
    // $('#lr-datefrom').on('change', function () {
    //     FetchLeaveRequestList();
    // });
    // $('#lr-dateto').on('change', function () {
    //     FetchLeaveRequestList();
    // });
    function LRConfimationmodal() {
            var element = document.querySelectorAll(".modal-header");
            var content = document.querySelectorAll(".modal-content");
            var modal_span = document.querySelectorAll(".modal-header span");
            var delete_ = '<input type="submit" value="YES" id="btn-delete_item" class="btn-pay"  onclick="deletelritem()"/>';
            var cancelButton = '<input type="submit" value="NO" id="btn-cancel" class="btn-NO" data-dismiss="modal"/>';
            $('.input-container-button').empty();
            $('.img-header').empty();

            content.forEach(content => {
                content.style.setProperty("border-radius", "15px 15px 15px 15px", "important");
                content.style.setProperty("border-bottom", "7px #Ff0000 solid", "important");

            });
            modal_span.forEach(modal_span => {
                modal_span.style.setProperty("text-align", "center", "important");
                modal_span.style.setProperty("width", "100%", "important");
            });
            element.forEach(element => {
                element.style.setProperty("color", "white", "important");
                element.style.setProperty("background-color", "#Ff0000", "important");
                element.style.setProperty("border-radius", "15px 15px 0 0", "important");
                element.style.setProperty("text-align", "center", "important");
            });
            document.getElementById('message').textContent = 'Are you sure you want to delete this item?';
            document.getElementById('validation').textContent = 'Confirmation';
            $('.input-container-button').append(cancelButton);
            $('.input-container-button').append(delete_);
            $('.img-header').append('<img id="modalImage" src="/img/OPTION.webp" alt="Modal Image" />');
        }
    function DeleteLR(){

        actionlrfiling.style.display = "none";
        pencillrfiling.style.display = "block";
        otStatusIdentifier = 1;
        var checkboxes = document.querySelectorAll('.lr-list-row-checkbox');
        var checkedCheckboxes = Array.from(checkboxes).filter(checkbox => checkbox.checked);
        if(checkedCheckboxes.length == 0){
            // alert('Select Overtime Request First');
            notifyMsg("Warning!",'No leave selected', "orange", "fas fa-exclamation-triangle");
        }
        else{

            LRConfimationmodal();
            $("#alertmodal").modal('show');
            selectedLRRequest.length = 0;
            for (var checkbox of checkedCheckboxes) {
                var value = checkbox.value;
                selectedLRRequest.push(value);
            }
            console.log(selectedLRRequest);
        }
    }
    function deletelritem(){
        const lrapproval = []
        for(var i = 0; i < selectedLRRequest.length; i++){
            lrapproval.push({ id: selectedLRRequest[i], reason: '0'});
        }

        var data = {};
        data.lrapproval = lrapproval;
        data.status = '2';
        console.log(data);

        // alert('Deleted');
        $.ajax({
            url: '/Leave/MultiApproval',
            data: data,
            type: "POST",
            dataType: "json"
        }).done(function (data) {
            var status = data.status;
            console.log(status);
            if (status === 'Entity already exists') {
                notifyMsg('Warning!', 'OT already exists', 'yellow', 'fas fa-check');
            }
            else {
                notifyMsg('Success!', 'Successfully Saved', 'green', 'fas fa-check');
            }

            modal = document.getElementById('defaultmodal');
            modal.style.display = "none";
            // window.location.reload();
            sessionStorage.setItem("LeaveFlag", "true");
            window.location.reload();
        });

    }
    $('#leave-table').on('click', '.checkAllLRList', function () {
        var checkAll = document.getElementById("checkAllLRList");
        if (checkAll.checked == true) {
            var checkboxes = document.querySelectorAll('.lr-list-row-checkbox');
            for (var checkbox of checkboxes) {
                checkbox.checked = this.checked;
            }
        }

        else {
            var checkboxes = document.querySelectorAll('.lr-list-row-checkbox');
            for (var checkbox of checkboxes) {
                checkbox.checked = false;
            }
        }
    });
</script>